import { APIGatewayProxyEvent, Context, APIGatewayProxyResult } from 'aws-lambda';

type OrderCreated = {
  orderId: number;
  products: string;
  totalPrice: number;
};

import wrap from '@dazn/lambda-powertools-pattern-basic'
import Log from '@dazn/lambda-powertools-logger';
import { withMiddlewares } from '../../common/Tracing/middleware';
export const Finance = wrap(withMiddlewares(FinanceHandler))

/**
 * @description Example of how a finance service could receive basic information about money generated by an order
 */
export async function FinanceHandler(
  event: APIGatewayProxyEvent,
  context: Context
): Promise<APIGatewayProxyResult> {
  const eventBody = event.body ? JSON.parse(event.body) : event;

  if (eventBody['detail-type'] === 'OrderCreated') {
    const orderEvent: OrderCreated = eventBody.detail;
    const priceInDollars: number = orderEvent.totalPrice / 100;
    const message = `Adding order ID "${orderEvent.orderId}" and $${priceInDollars} to the books!`;
    Log.info(message);

    return {
      statusCode: 200,
      body: JSON.stringify(message)
    } as APIGatewayProxyResult;
  }

  Log.error('No valid event passed');

  return {
    statusCode: 400,
    body: JSON.stringify('No valid event passed')
  } as APIGatewayProxyResult;
}
